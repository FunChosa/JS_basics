1. create files 
    index.html
    index.js
    index.css
    assets/image.jpg
2. in terminal open current folder (cd "full folder name")
3. npm init -y
4. npm install webpack webpack-cli --save-dev
(use this link for plugins https://webpack.js.org/guides/getting-started)
5. make sure that in package.json appeared follow devDependencies
    "devDependencies": {
  "webpack": "^5.74.0",
  "webpack-cli": "^4.10.0"
}
6. create webpack.config.js file 
7. add
const path = require('path');

module.exports = {
  mode: "development",
  entry: path.resolve(__dirname, 'index.js'),
  output: {
    filename: 'main.js',
    path: path.resolve(__dirname, 'dist'),
    clean: true
  }
};
8. npm install --save-dev html-webpack-plugin
    const HtmlWebpackPlugin = require('html-webpack-plugin');

    plugins: [
    new HtmlWebpackPlugin({
      template: path.resolve(__dirname, 'index.html'),
    })
  ],
    =====================================
   npm install -D babel-loader @babel/core @babel/preset-env webpack

   module: {
    rules: [
      {
        test: /.m?js$/,
        exclude: /(node_modules|bower_components)/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: ['@babel/preset-env']
          }
        }
      }
    ]
  }
   ======================================
   npm install --save-dev style-loader css-loader


    Далее добавим в webpack.config.js в module.rules новое правило сразу после правила, 
    которое мы создали для Babel:


   {
      test: /.css$/i,
      use: ['style-loader', 'css-loader'],
    }

    ===========================================
    npm install --save-dev webpack-dev-server

    module.exports = {
  // ...
  // Другие настройки
  // ...
  devServer: {
    static: path.resolve(__dirname, 'dist'),
    port: 8080,
    open: true
  }
};
================================================
npm install --save-dev mini-css-extract-plugin

9. Для поддержки картинок при сборке нужно добавить ещё одно правило в webpack.config.js:
    {
      test: /.(png|svg|jpg|jpeg|gif)$/i,
      type: 'asset/resource',
    }
-----------
    import MY_IMAGE from './assets/image.png';

// Остальной код

const img = document.createElement("img");
img.src = MY_IMAGE;
document.body.append(img);